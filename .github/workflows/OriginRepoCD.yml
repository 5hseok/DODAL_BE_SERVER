name: CD Pipeline for Main Branch
on:
  push:
    branches:
      - main

jobs:
  Docker_Build_And_Push:

    runs-on: ubuntu-22.04

    steps:
      - name: Check REPO_ROLE
        env:
          REPO_ROLE: ${{ secrets.REPO_ROLE }}

        run: |
          if [ "$REPO_ROLE" == "ORIGIN_REPO" ]; then
            echo "Running CI for Forked Repo..."
          else
            echo "Skipping CI (Not a Forked Repo)"
            exit 1
          fi

      # 1. 리포지토리 코드 체크아웃
      - name: Check out the repository
        uses: actions/checkout@v3

      # 2. Docker Hub 로그인
      - name: Log in to Docker Hub
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      # 3. 현재 디렉토리 파일 리스트 확인 (디버깅 용도)
      - name: List files in current directory
        run: ls -la

      # 도커 캐싱
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{runner.os}}-docker-${{hashFiles('**/Dockerfile', 'build.gradle', 'settings.gradle')}}
          restore-keys: |
            ${{runner.os}}-docker-${{hashFiles('**/Dockerfile')}}
            ${{runner.os}}-docker-

      # 4. Docker 이미지 빌드 및 푸시
      - name: Build and Push Docker image
        run: |
          docker buildx build \
          --platform linux/amd64 \
          --push \
          --tag 5hseok/dodal-server:0.0.1 \
          --cache-from type=local, src=/tmp/.buildx-cache \
          --cache-to type=local,dest-/tmp/.buildx-cache,mode=max \
          --file ./Dockerfile .

  Deploy:
    needs: Docker_Build_And_Push
    runs-on: ubuntu-22.04

    steps:
      # EC2에 SSH로 연결하여 배포
      - name: Deploy to EC2 via SSH
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          script: |            
            cd /home/ubuntu
            
            export DODAL_JASYPT_KEY_IN_PROD=${{ secrets.DODAL_JASYPT_KEY }}
            
            sudo docker-compose pull

            sudo docker-compose down || true
            
            sudo -E docker-compose up -d